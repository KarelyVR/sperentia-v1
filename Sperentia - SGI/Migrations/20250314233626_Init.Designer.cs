// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Sperientia___SGI.Models.dbModels.DbContext;

#nullable disable

namespace Sperientia___SGI.Migrations
{
    [DbContext(typeof(SperientiaContext))]
    [Migration("20250314233626_Init")]
    partial class Init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<int>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<int>", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<int>", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("Sperientia___SGI.Models.dbModels.ApplicationUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("EstaActivo")
                        .HasColumnType("bit")
                        .HasColumnName("EstaActivo");

                    b.Property<string>("FotografiaUrl")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("FotografiaUrl");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NombreCompleto")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("NombreCompleto");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("Sperientia___SGI.Models.dbModels.Ausencia", b =>
                {
                    b.Property<int>("IdAusencia")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("IdAusencia");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdAusencia"));

                    b.Property<DateTime?>("FechaFin")
                        .HasColumnType("date")
                        .HasColumnName("FechaFin");

                    b.Property<DateTime>("FechaInicio")
                        .HasColumnType("date")
                        .HasColumnName("FechaInicio");

                    b.Property<int>("IdUsuario")
                        .HasColumnType("int")
                        .HasColumnName("IdUsuario");

                    b.Property<string>("MotivoAusencia")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("MotivoAusencia");

                    b.HasKey("IdAusencia")
                        .HasName("PK__Ausencia__0B5BA4140848C245");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("IdAusencia"));

                    b.HasIndex("IdUsuario");

                    b.ToTable("Ausencia", "dbo");
                });

            modelBuilder.Entity("Sperientia___SGI.Models.dbModels.Beneficio", b =>
                {
                    b.Property<int>("IdBeneficio")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("IdBeneficio");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdBeneficio"));

                    b.Property<string>("Descripcion")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Descripcion");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Nombre");

                    b.HasKey("IdBeneficio")
                        .HasName("PK__Benefici__14B7CA0C1D118B54");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("IdBeneficio"));

                    b.HasIndex("Nombre")
                        .IsUnique()
                        .HasDatabaseName("UQ__Benefici__75E3EFCF5716E1CD");

                    b.ToTable("Beneficio", "dbo");
                });

            modelBuilder.Entity("Sperientia___SGI.Models.dbModels.BeneficioUsuario", b =>
                {
                    b.Property<int>("IdUsuarioInformacion")
                        .HasColumnType("int")
                        .HasColumnName("IdUsuarioInformacion");

                    b.Property<int>("IdBeneficio")
                        .HasColumnType("int")
                        .HasColumnName("IdBeneficio");

                    b.Property<bool>("EstaAsignado")
                        .HasColumnType("bit")
                        .HasColumnName("EstaAsignado");

                    b.HasKey("IdUsuarioInformacion", "IdBeneficio")
                        .HasName("PK__Benefici__94AE11924D7993CA");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("IdUsuarioInformacion", "IdBeneficio"));

                    b.HasIndex("IdBeneficio");

                    b.ToTable("BeneficioUsuario", "dbo");
                });

            modelBuilder.Entity("Sperientia___SGI.Models.dbModels.CapacitacionTipo", b =>
                {
                    b.Property<int>("IdCapacitacionTipo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("IdCapacitacionTipo");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCapacitacionTipo"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Descripcion");

                    b.HasKey("IdCapacitacionTipo")
                        .HasName("PK__Capacita__46690681113D0F7B");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("IdCapacitacionTipo"));

                    b.HasIndex("Descripcion")
                        .IsUnique()
                        .HasDatabaseName("UQ__Capacita__92C53B6C023DF2D4");

                    b.ToTable("CapacitacionTipo", "dbo");
                });

            modelBuilder.Entity("Sperientia___SGI.Models.dbModels.CapacitacionUsuario", b =>
                {
                    b.Property<int>("IdCapacitacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("IdCapacitacion");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCapacitacion"));

                    b.Property<int>("IdCapacitacionTipo")
                        .HasColumnType("int")
                        .HasColumnName("IdCapacitacionTipo");

                    b.Property<int>("IdUsuario")
                        .HasColumnType("int")
                        .HasColumnName("IdUsuario");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Nombre");

                    b.HasKey("IdCapacitacion")
                        .HasName("PK__Capacita__B3A1D353BA92BC63");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("IdCapacitacion"));

                    b.HasIndex("IdCapacitacionTipo");

                    b.HasIndex("IdUsuario");

                    b.ToTable("CapacitacionUsuario", "dbo");
                });

            modelBuilder.Entity("Sperientia___SGI.Models.dbModels.Departamento", b =>
                {
                    b.Property<int>("IdDepartamento")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("IdDepartamento");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdDepartamento"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("Nombre");

                    b.HasKey("IdDepartamento")
                        .HasName("PK__Departam__787A433D36EBF1C2");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("IdDepartamento"));

                    b.HasIndex("Nombre")
                        .IsUnique()
                        .HasDatabaseName("UQ__Departam__75E3EFCF06D554EB");

                    b.ToTable("Departamento", "dbo");
                });

            modelBuilder.Entity("Sperientia___SGI.Models.dbModels.Direccion", b =>
                {
                    b.Property<int>("IdDireccion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("IdDireccion");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdDireccion"));

                    b.Property<string>("ComprobanteDomicilioUrl")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("ComprobanteDomicilioUrl");

                    b.Property<string>("Direccion_")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("Direccion");

                    b.Property<string>("GoogleMapsUrl")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("GoogleMapsUrl");

                    b.Property<int>("IdUsuario")
                        .HasColumnType("int")
                        .HasColumnName("IdUsuario");

                    b.Property<decimal?>("Latitud")
                        .HasPrecision(9, 6)
                        .HasColumnType("decimal(9,6)")
                        .HasColumnName("Latitud");

                    b.Property<decimal?>("Longitud")
                        .HasPrecision(9, 6)
                        .HasColumnType("decimal(9,6)")
                        .HasColumnName("Longitud");

                    b.HasKey("IdDireccion")
                        .HasName("PK__Direccio__1F8E0C76D3DAB651");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("IdDireccion"));

                    b.HasIndex("IdUsuario");

                    b.ToTable("Direccion", "dbo");
                });

            modelBuilder.Entity("Sperientia___SGI.Models.dbModels.Divisa", b =>
                {
                    b.Property<int>("IdDivisa")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("IdDivisa");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdDivisa"));

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("Codigo");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Nombre");

                    b.HasKey("IdDivisa")
                        .HasName("PK__Divisa__DA960DCBE9A209AB");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("IdDivisa"));

                    b.HasIndex("Codigo")
                        .IsUnique()
                        .HasDatabaseName("UQ__Divisa__06370DAC55DB37EE");

                    b.HasIndex("Nombre")
                        .IsUnique()
                        .HasDatabaseName("UQ__Divisa__75E3EFCF154D5815");

                    b.ToTable("Divisa", "dbo");
                });

            modelBuilder.Entity("Sperientia___SGI.Models.dbModels.Empresa", b =>
                {
                    b.Property<int>("IdEmpresa")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("IdEmpresa");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdEmpresa"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("Nombre");

                    b.HasKey("IdEmpresa")
                        .HasName("PK__Empresa__5EF4033E05E4F6AB");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("IdEmpresa"));

                    b.HasIndex("Nombre")
                        .IsUnique()
                        .HasDatabaseName("UQ__Empresa__75E3EFCF5E153627");

                    b.ToTable("Empresa", "dbo");
                });

            modelBuilder.Entity("Sperientia___SGI.Models.dbModels.EstadoCivil", b =>
                {
                    b.Property<int>("IdEstadoCivil")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("IdEstadoCivil");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdEstadoCivil"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Descripcion");

                    b.HasKey("IdEstadoCivil")
                        .HasName("PK__EstadoCi__889DE1B295F28A79");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("IdEstadoCivil"));

                    b.HasIndex("Descripcion")
                        .IsUnique()
                        .HasDatabaseName("UQ__EstadoCi__92C53B6CAC8C98BB");

                    b.ToTable("EstadoCivil", "dbo");
                });

            modelBuilder.Entity("Sperientia___SGI.Models.dbModels.Inventario", b =>
                {
                    b.Property<int>("IdInventario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("IdInventario");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdInventario"));

                    b.Property<string>("CodigoInterno")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("CodigoInterno");

                    b.Property<decimal?>("Costo")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal(10,2)")
                        .HasColumnName("Costo");

                    b.Property<string>("Descripcion")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("Descripcion");

                    b.Property<DateTime?>("FechaCompra")
                        .HasColumnType("date")
                        .HasColumnName("FechaCompra");

                    b.Property<string>("Foto")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("Foto");

                    b.Property<int>("IdCategoria")
                        .HasColumnType("int")
                        .HasColumnName("IdCategoria");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("Nombre");

                    b.Property<string>("Proveedor")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Proveedor");

                    b.HasKey("IdInventario")
                        .HasName("PK__Inventar__1927B20C818BEB6A");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("IdInventario"));

                    b.HasIndex("CodigoInterno")
                        .IsUnique()
                        .HasDatabaseName("UQ__Inventar__28C92875BD551D87");

                    b.HasIndex("IdCategoria");

                    b.ToTable("Inventario", "dbo");
                });

            modelBuilder.Entity("Sperientia___SGI.Models.dbModels.InventarioAsignacion", b =>
                {
                    b.Property<int>("IdInventario")
                        .HasColumnType("int")
                        .HasColumnName("IdInventario");

                    b.Property<int>("IdUsuario")
                        .HasColumnType("int")
                        .HasColumnName("IdUsuario");

                    b.Property<DateTime?>("FechaDevolucion")
                        .HasColumnType("date")
                        .HasColumnName("FechaDevolucion");

                    b.Property<DateTime>("FechaEntrega")
                        .HasColumnType("date")
                        .HasColumnName("FechaEntrega");

                    b.Property<string>("Nota")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("Nota");

                    b.HasKey("IdInventario", "IdUsuario")
                        .HasName("PK__Inventar__7C91E9F51745367F");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("IdInventario", "IdUsuario"));

                    b.HasIndex("IdUsuario");

                    b.ToTable("InventarioAsignacion", "dbo");
                });

            modelBuilder.Entity("Sperientia___SGI.Models.dbModels.InventarioCategoria", b =>
                {
                    b.Property<int>("IdCategoria")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("IdCategoria");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCategoria"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Nombre");

                    b.HasKey("IdCategoria")
                        .HasName("PK__Inventar__A3C02A10AD3B8676");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("IdCategoria"));

                    b.HasIndex("Nombre")
                        .IsUnique()
                        .HasDatabaseName("UQ__Inventar__75E3EFCF85CBA72C");

                    b.ToTable("InventarioCategoria", "dbo");
                });

            modelBuilder.Entity("Sperientia___SGI.Models.dbModels.InventarioGeneral", b =>
                {
                    b.Property<int>("IdInventario")
                        .HasColumnType("int")
                        .HasColumnName("IdInventario");

                    b.Property<string>("EstadoCondicion")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("EstadoCondicion");

                    b.Property<DateTime?>("GarantiaFechaFin")
                        .HasColumnType("date")
                        .HasColumnName("GarantiaFechaFin");

                    b.Property<string>("Marca")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Marca");

                    b.Property<string>("Modelo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Modelo");

                    b.Property<string>("NumeroSerie")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("NumeroSerie");

                    b.HasKey("IdInventario")
                        .HasName("PK__Inventar__1927B20CB37CD388");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("IdInventario"));

                    b.ToTable("InventarioGeneral", "dbo");
                });

            modelBuilder.Entity("Sperientia___SGI.Models.dbModels.InventarioLibro", b =>
                {
                    b.Property<int>("IdInventario")
                        .HasColumnType("int")
                        .HasColumnName("IdInventario");

                    b.Property<string>("Autor")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("Autor");

                    b.Property<string>("Editorial")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("Editorial");

                    b.Property<bool>("EsDigital")
                        .HasColumnType("bit")
                        .HasColumnName("EsDigital");

                    b.Property<string>("Isbn")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("ISBN");

                    b.Property<string>("Reseña")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("Reseña");

                    b.HasKey("IdInventario")
                        .HasName("PK__Inventar__1927B20C6FD6ACD2");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("IdInventario"));

                    b.ToTable("InventarioLibro", "dbo");
                });

            modelBuilder.Entity("Sperientia___SGI.Models.dbModels.NivelEstudio", b =>
                {
                    b.Property<int>("IdNivelEstudio")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("IdNivelEstudio");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdNivelEstudio"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Descripcion");

                    b.HasKey("IdNivelEstudio")
                        .HasName("PK__NivelEst__FF408A03D08D14CA");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("IdNivelEstudio"));

                    b.HasIndex("Descripcion")
                        .IsUnique()
                        .HasDatabaseName("UQ__NivelEst__92C53B6CF5C34844");

                    b.ToTable("NivelEstudio", "dbo");
                });

            modelBuilder.Entity("Sperientia___SGI.Models.dbModels.Pais", b =>
                {
                    b.Property<int>("IdPais")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("IdPais");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdPais"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("Nombre");

                    b.HasKey("IdPais")
                        .HasName("PK__Pais__FC850A7BE374204E");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("IdPais"));

                    b.HasIndex("Nombre")
                        .IsUnique()
                        .HasDatabaseName("UQ__Pais__75E3EFCFE0C99BBD");

                    b.ToTable("Pais", "dbo");
                });

            modelBuilder.Entity("Sperientia___SGI.Models.dbModels.Pronombre", b =>
                {
                    b.Property<int>("IdPronombre")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("IdPronombre");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdPronombre"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Descripcion");

                    b.HasKey("IdPronombre")
                        .HasName("PK__Pronombr__36F24BB1DC4D5397");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("IdPronombre"));

                    b.HasIndex("Descripcion")
                        .IsUnique()
                        .HasDatabaseName("UQ__Pronombr__92C53B6C782C7B05");

                    b.ToTable("Pronombre", "dbo");
                });

            modelBuilder.Entity("Sperientia___SGI.Models.dbModels.Servicio", b =>
                {
                    b.Property<int>("IdServicio")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("IdServicio");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdServicio"));

                    b.Property<string>("Contrasena")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Contrasena");

                    b.Property<decimal>("Costo")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal(10,2)")
                        .HasColumnName("Costo");

                    b.Property<int>("CostoDivisa")
                        .HasColumnType("int")
                        .HasColumnName("CostoDivisa");

                    b.Property<string>("CostoFrecuencia")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("CostoFrecuencia");

                    b.Property<string>("CuentaRegistrada")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)")
                        .HasColumnName("CuentaRegistrada");

                    b.Property<DateTime?>("FechaAdquisicion")
                        .HasColumnType("date")
                        .HasColumnName("FechaAdquisicion");

                    b.Property<string>("MetodoPago")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("MetodoPago");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("Nombre");

                    b.Property<string>("Notas")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)")
                        .HasColumnName("Notas");

                    b.Property<DateTime?>("UltimaModificacionContrasena")
                        .HasColumnType("datetime")
                        .HasColumnName("UltimaModificacionContrasena");

                    b.Property<string>("Url")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("URL");

                    b.HasKey("IdServicio")
                        .HasName("PK__Servicio__2DCCF9A299E17E3D");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("IdServicio"));

                    b.HasIndex("CostoDivisa");

                    b.ToTable("Servicio", "dbo");
                });

            modelBuilder.Entity("Sperientia___SGI.Models.dbModels.ServicioUsuario", b =>
                {
                    b.Property<int>("IdServicio")
                        .HasColumnType("int")
                        .HasColumnName("IdServicio");

                    b.Property<int>("IdUsuario")
                        .HasColumnType("int")
                        .HasColumnName("IdUsuario");

                    b.Property<DateTime>("FechaAsignacion")
                        .HasColumnType("date")
                        .HasColumnName("FechaAsignacion");

                    b.HasKey("IdServicio", "IdUsuario")
                        .HasName("PK__Servicio__487AA25BF6517A1A");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("IdServicio", "IdUsuario"));

                    b.HasIndex("IdUsuario");

                    b.ToTable("ServicioUsuario", "dbo");
                });

            modelBuilder.Entity("Sperientia___SGI.Models.dbModels.SolicitudVacaciones", b =>
                {
                    b.Property<int>("IdSolicitud")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("IdSolicitud");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdSolicitud"));

                    b.Property<int>("DerechoDiasEmpleado")
                        .HasColumnType("int")
                        .HasColumnName("DerechoDiasEmpleado");

                    b.Property<DateTime>("FechaSolicitud")
                        .HasColumnType("datetime")
                        .HasColumnName("FechaSolicitud");

                    b.Property<int>("IdEmpleado")
                        .HasColumnType("int")
                        .HasColumnName("IdEmpleado");

                    b.Property<int>("IdEstatus")
                        .HasColumnType("int")
                        .HasColumnName("IdEstatus");

                    b.Property<int?>("IdUsuarioRh")
                        .HasColumnType("int")
                        .HasColumnName("IdUsuarioRH");

                    b.Property<string>("SustitutoNombre")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("SustitutoNombre");

                    b.Property<string>("SustitutoTelefono")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("SustitutoTelefono");

                    b.HasKey("IdSolicitud")
                        .HasName("PK__Solicitu__36899CEF4410E6C2");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("IdSolicitud"));

                    b.HasIndex("IdEmpleado");

                    b.HasIndex("IdEstatus");

                    b.HasIndex("IdUsuarioRh");

                    b.ToTable("SolicitudVacaciones", "dbo");
                });

            modelBuilder.Entity("Sperientia___SGI.Models.dbModels.SolicitudVacacionesDia", b =>
                {
                    b.Property<int>("IdSolicitud")
                        .HasColumnType("int")
                        .HasColumnName("IdSolicitud");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("date")
                        .HasColumnName("Fecha");

                    b.HasKey("IdSolicitud", "Fecha")
                        .HasName("PK__Solicitu__DDB9544A027BF603");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("IdSolicitud", "Fecha"));

                    b.ToTable("SolicitudVacacionesDias", "dbo");
                });

            modelBuilder.Entity("Sperientia___SGI.Models.dbModels.SolicitudVacacionesEstatus", b =>
                {
                    b.Property<int>("IdEstatus")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("IdEstatus");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdEstatus"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Descripcion");

                    b.HasKey("IdEstatus")
                        .HasName("PK__Solicitu__B32BA1C7F59265F2");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("IdEstatus"));

                    b.HasIndex("Descripcion")
                        .IsUnique()
                        .HasDatabaseName("UQ__Solicitu__92C53B6C6C0B418B");

                    b.ToTable("SolicitudVacacionesEstatus", "dbo");
                });

            modelBuilder.Entity("Sperientia___SGI.Models.dbModels.TallaPlayera", b =>
                {
                    b.Property<int>("IdTallaPlayera")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("IdTallaPlayera");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdTallaPlayera"));

                    b.Property<string>("Talla")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("Talla");

                    b.HasKey("IdTallaPlayera")
                        .HasName("PK__TallaPla__7F77601606E4CDD9");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("IdTallaPlayera"));

                    b.HasIndex("Talla")
                        .IsUnique()
                        .HasDatabaseName("UQ__TallaPla__69DA116124DB2005");

                    b.ToTable("TallaPlayera", "dbo");
                });

            modelBuilder.Entity("Sperientia___SGI.Models.dbModels.TipoContrato", b =>
                {
                    b.Property<int>("IdTipoContrato")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("IdTipoContrato");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdTipoContrato"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Descripcion");

                    b.HasKey("IdTipoContrato")
                        .HasName("PK__TipoCont__F46C49C2E9581F4E");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("IdTipoContrato"));

                    b.HasIndex("Descripcion")
                        .IsUnique()
                        .HasDatabaseName("UQ__TipoCont__92C53B6C0FE1466A");

                    b.ToTable("TipoContrato", "dbo");
                });

            modelBuilder.Entity("Sperientia___SGI.Models.dbModels.UsuarioInformacion", b =>
                {
                    b.Property<int>("IdUsuarioLogin")
                        .HasColumnType("int")
                        .HasColumnName("IdUsuarioLogin");

                    b.Property<string>("ActaNacimientoUrl")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("ActaNacimientoUrl");

                    b.Property<string>("Banco")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Banco");

                    b.Property<string>("BancoClabe")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("BancoCLABE");

                    b.Property<string>("CedulaProfesional")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("CedulaProfesional");

                    b.Property<string>("Curp")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("CURP");

                    b.Property<string>("CurriculumVitaeUrl")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("CurriculumVitaeUrl");

                    b.Property<int>("DiasDisponiblesVacaciones")
                        .HasColumnType("int")
                        .HasColumnName("DiasDisponiblesVacaciones");

                    b.Property<int?>("DuracionJornada")
                        .HasColumnType("int")
                        .HasColumnName("DuracionJornada");

                    b.Property<DateTime?>("FechaFinContrato")
                        .HasColumnType("date")
                        .HasColumnName("FechaFinContrato");

                    b.Property<DateTime>("FechaIngreso")
                        .HasColumnType("date")
                        .HasColumnName("FechaIngreso");

                    b.Property<DateTime?>("FechaIngresoAsalariado")
                        .HasColumnType("date")
                        .HasColumnName("FechaIngresoAsalariado");

                    b.Property<DateTime>("FechaNacimiento")
                        .HasColumnType("date")
                        .HasColumnName("FechaNacimiento");

                    b.Property<int>("IdDepartamento")
                        .HasColumnType("int")
                        .HasColumnName("IdDepartamento");

                    b.Property<int>("IdEmpresa")
                        .HasColumnType("int")
                        .HasColumnName("IdEmpresa");

                    b.Property<int>("IdEstadoCivil")
                        .HasColumnType("int")
                        .HasColumnName("IdEstadoCivil");

                    b.Property<int>("IdNivelEstudio")
                        .HasColumnType("int")
                        .HasColumnName("IdNivelEstudio");

                    b.Property<int>("IdPais")
                        .HasColumnType("int")
                        .HasColumnName("IdPais");

                    b.Property<int?>("IdPronombre")
                        .HasColumnType("int")
                        .HasColumnName("IdPronombre");

                    b.Property<int?>("IdSupervisor")
                        .HasColumnType("int")
                        .HasColumnName("IdSupervisor");

                    b.Property<int?>("IdTallaPlayera")
                        .HasColumnType("int")
                        .HasColumnName("IdTallaPlayera");

                    b.Property<int>("IdTipoContrato")
                        .HasColumnType("int")
                        .HasColumnName("IdTipoContrato");

                    b.Property<string>("IdentificadorNacional")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("IdentificadorNacional");

                    b.Property<string>("Notas")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Notas");

                    b.Property<string>("NumeroColaborador")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("NumeroColaborador");

                    b.Property<string>("NumeroSeguroSocial")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("NumeroSeguroSocial");

                    b.Property<string>("Puesto")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Puesto");

                    b.Property<string>("Rfc")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("RFC");

                    b.Property<int>("Sueldo")
                        .HasColumnType("int")
                        .HasColumnName("Sueldo");

                    b.Property<int>("SueldoDivisa")
                        .HasColumnType("int")
                        .HasColumnName("SueldoDivisa");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("Telefono");

                    b.HasKey("IdUsuarioLogin")
                        .HasName("PK__UsuarioI__9E973030AF5A6385");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("IdUsuarioLogin"));

                    b.HasIndex("Curp")
                        .IsUnique()
                        .HasDatabaseName("UQ__UsuarioI__F46C4CBF12446C4B")
                        .HasFilter("[CURP] IS NOT NULL");

                    b.HasIndex("IdDepartamento");

                    b.HasIndex("IdEmpresa");

                    b.HasIndex("IdEstadoCivil");

                    b.HasIndex("IdNivelEstudio");

                    b.HasIndex("IdPais");

                    b.HasIndex("IdPronombre");

                    b.HasIndex("IdSupervisor");

                    b.HasIndex("IdTallaPlayera");

                    b.HasIndex("IdTipoContrato");

                    b.HasIndex("IdentificadorNacional")
                        .IsUnique()
                        .HasDatabaseName("UQ__UsuarioI__76712BA3CE15A48A")
                        .HasFilter("[IdentificadorNacional] IS NOT NULL");

                    b.HasIndex("NumeroColaborador")
                        .IsUnique()
                        .HasDatabaseName("UQ__UsuarioI__672E3C39969E54E2");

                    b.HasIndex("NumeroSeguroSocial")
                        .IsUnique()
                        .HasDatabaseName("UQ__UsuarioI__4B6490811A110918")
                        .HasFilter("[NumeroSeguroSocial] IS NOT NULL");

                    b.HasIndex("Rfc")
                        .IsUnique()
                        .HasDatabaseName("UQ__UsuarioI__CAFFA85E37A82D25")
                        .HasFilter("[RFC] IS NOT NULL");

                    b.HasIndex("SueldoDivisa");

                    b.ToTable("UsuarioInformacion", "dbo");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<int>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole<int>", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<int>", b =>
                {
                    b.HasOne("Sperientia___SGI.Models.dbModels.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<int>", b =>
                {
                    b.HasOne("Sperientia___SGI.Models.dbModels.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<int>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole<int>", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Sperientia___SGI.Models.dbModels.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<int>", b =>
                {
                    b.HasOne("Sperientia___SGI.Models.dbModels.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Sperientia___SGI.Models.dbModels.Ausencia", b =>
                {
                    b.HasOne("Sperientia___SGI.Models.dbModels.ApplicationUser", "UsuarioLogin")
                        .WithMany("Ausencias")
                        .HasForeignKey("IdUsuario")
                        .IsRequired()
                        .HasConstraintName("FK_Ausencia_Usuario");

                    b.Navigation("UsuarioLogin");
                });

            modelBuilder.Entity("Sperientia___SGI.Models.dbModels.BeneficioUsuario", b =>
                {
                    b.HasOne("Sperientia___SGI.Models.dbModels.Beneficio", "Beneficio")
                        .WithMany("BeneficioUsuarios")
                        .HasForeignKey("IdBeneficio")
                        .IsRequired()
                        .HasConstraintName("FK_BeneficioUsuario_Beneficio");

                    b.HasOne("Sperientia___SGI.Models.dbModels.ApplicationUser", "UsuarioLogin")
                        .WithMany("BeneficioUsuarios")
                        .HasForeignKey("IdUsuarioInformacion")
                        .IsRequired()
                        .HasConstraintName("FK_BeneficioUsuario_Usuario");

                    b.Navigation("Beneficio");

                    b.Navigation("UsuarioLogin");
                });

            modelBuilder.Entity("Sperientia___SGI.Models.dbModels.CapacitacionUsuario", b =>
                {
                    b.HasOne("Sperientia___SGI.Models.dbModels.CapacitacionTipo", "CapacitacionTipo")
                        .WithMany("CapacitacionUsuarios")
                        .HasForeignKey("IdCapacitacionTipo")
                        .IsRequired()
                        .HasConstraintName("FK_CapacitacionUsuario_CapacitacionTipo");

                    b.HasOne("Sperientia___SGI.Models.dbModels.ApplicationUser", "UsuarioLogin")
                        .WithMany("CapacitacionUsuarios")
                        .HasForeignKey("IdUsuario")
                        .IsRequired()
                        .HasConstraintName("FK_CapacitacionUsuario_Usuario");

                    b.Navigation("CapacitacionTipo");

                    b.Navigation("UsuarioLogin");
                });

            modelBuilder.Entity("Sperientia___SGI.Models.dbModels.Direccion", b =>
                {
                    b.HasOne("Sperientia___SGI.Models.dbModels.ApplicationUser", "UsuarioLogin")
                        .WithMany("Direccions")
                        .HasForeignKey("IdUsuario")
                        .IsRequired()
                        .HasConstraintName("FK_Direccion_Usuario");

                    b.Navigation("UsuarioLogin");
                });

            modelBuilder.Entity("Sperientia___SGI.Models.dbModels.Inventario", b =>
                {
                    b.HasOne("Sperientia___SGI.Models.dbModels.InventarioCategoria", "InventarioCategoria")
                        .WithMany("Inventarios")
                        .HasForeignKey("IdCategoria")
                        .IsRequired()
                        .HasConstraintName("FK_Inventario_Categoria");

                    b.Navigation("InventarioCategoria");
                });

            modelBuilder.Entity("Sperientia___SGI.Models.dbModels.InventarioAsignacion", b =>
                {
                    b.HasOne("Sperientia___SGI.Models.dbModels.Inventario", "Inventario")
                        .WithMany("InventarioAsignacions")
                        .HasForeignKey("IdInventario")
                        .IsRequired()
                        .HasConstraintName("FK_InventarioAsignacion_Inventario");

                    b.HasOne("Sperientia___SGI.Models.dbModels.ApplicationUser", "UsuarioLogin")
                        .WithMany("InventarioAsignacions")
                        .HasForeignKey("IdUsuario")
                        .IsRequired()
                        .HasConstraintName("FK_InventarioAsignacion_Usuario");

                    b.Navigation("Inventario");

                    b.Navigation("UsuarioLogin");
                });

            modelBuilder.Entity("Sperientia___SGI.Models.dbModels.InventarioGeneral", b =>
                {
                    b.HasOne("Sperientia___SGI.Models.dbModels.Inventario", "Inventario")
                        .WithOne("InventarioGeneral")
                        .HasForeignKey("Sperientia___SGI.Models.dbModels.InventarioGeneral", "IdInventario")
                        .IsRequired()
                        .HasConstraintName("FK_InventarioGeneral_Inventario");

                    b.Navigation("Inventario");
                });

            modelBuilder.Entity("Sperientia___SGI.Models.dbModels.InventarioLibro", b =>
                {
                    b.HasOne("Sperientia___SGI.Models.dbModels.Inventario", "Inventario")
                        .WithOne("InventarioLibro")
                        .HasForeignKey("Sperientia___SGI.Models.dbModels.InventarioLibro", "IdInventario")
                        .IsRequired()
                        .HasConstraintName("FK_InventarioLibro_Inventario");

                    b.Navigation("Inventario");
                });

            modelBuilder.Entity("Sperientia___SGI.Models.dbModels.Servicio", b =>
                {
                    b.HasOne("Sperientia___SGI.Models.dbModels.Divisa", "Divisa")
                        .WithMany("Servicios")
                        .HasForeignKey("CostoDivisa")
                        .IsRequired()
                        .HasConstraintName("FK_Servicio_Divisa");

                    b.Navigation("Divisa");
                });

            modelBuilder.Entity("Sperientia___SGI.Models.dbModels.ServicioUsuario", b =>
                {
                    b.HasOne("Sperientia___SGI.Models.dbModels.Servicio", "Servicio")
                        .WithMany("ServicioUsuarios")
                        .HasForeignKey("IdServicio")
                        .IsRequired()
                        .HasConstraintName("FK_ServicioUsuario_Servicio");

                    b.HasOne("Sperientia___SGI.Models.dbModels.ApplicationUser", "UsuarioLogin")
                        .WithMany("ServicioUsuarios")
                        .HasForeignKey("IdUsuario")
                        .IsRequired()
                        .HasConstraintName("FK_ServicioUsuario_Usuario");

                    b.Navigation("Servicio");

                    b.Navigation("UsuarioLogin");
                });

            modelBuilder.Entity("Sperientia___SGI.Models.dbModels.SolicitudVacaciones", b =>
                {
                    b.HasOne("Sperientia___SGI.Models.dbModels.ApplicationUser", "UsuarioLogin_IdEmpleado")
                        .WithMany("SolicitudVacaciones_IdEmpleado")
                        .HasForeignKey("IdEmpleado")
                        .IsRequired()
                        .HasConstraintName("FK_SolicitudVacaciones_Empleado");

                    b.HasOne("Sperientia___SGI.Models.dbModels.SolicitudVacacionesEstatus", "SolicitudVacacionesEstatu")
                        .WithMany("SolicitudVacaciones")
                        .HasForeignKey("IdEstatus")
                        .IsRequired()
                        .HasConstraintName("FK_SolicitudVacaciones_Estatus");

                    b.HasOne("Sperientia___SGI.Models.dbModels.ApplicationUser", "UsuarioLogin_IdUsuarioRh")
                        .WithMany("SolicitudVacaciones_IdUsuarioRh")
                        .HasForeignKey("IdUsuarioRh")
                        .HasConstraintName("FK_SolicitudVacaciones_UsuarioRH");

                    b.Navigation("SolicitudVacacionesEstatu");

                    b.Navigation("UsuarioLogin_IdEmpleado");

                    b.Navigation("UsuarioLogin_IdUsuarioRh");
                });

            modelBuilder.Entity("Sperientia___SGI.Models.dbModels.SolicitudVacacionesDia", b =>
                {
                    b.HasOne("Sperientia___SGI.Models.dbModels.SolicitudVacaciones", "SolicitudVacacione")
                        .WithMany("SolicitudVacacionesDias")
                        .HasForeignKey("IdSolicitud")
                        .IsRequired()
                        .HasConstraintName("FK_SolicitudVacacionesDias_Solicitud");

                    b.Navigation("SolicitudVacacione");
                });

            modelBuilder.Entity("Sperientia___SGI.Models.dbModels.UsuarioInformacion", b =>
                {
                    b.HasOne("Sperientia___SGI.Models.dbModels.Departamento", "Departamento")
                        .WithMany("UsuarioInformacions")
                        .HasForeignKey("IdDepartamento")
                        .IsRequired()
                        .HasConstraintName("FK_UsuarioInformacion_Departamento");

                    b.HasOne("Sperientia___SGI.Models.dbModels.Empresa", "Empresa")
                        .WithMany("UsuarioInformacions")
                        .HasForeignKey("IdEmpresa")
                        .IsRequired()
                        .HasConstraintName("FK_UsuarioInformacion_Empresa");

                    b.HasOne("Sperientia___SGI.Models.dbModels.EstadoCivil", "EstadoCivil")
                        .WithMany("UsuarioInformacions")
                        .HasForeignKey("IdEstadoCivil")
                        .IsRequired()
                        .HasConstraintName("FK_UsuarioInformacion_EstadoCivil");

                    b.HasOne("Sperientia___SGI.Models.dbModels.NivelEstudio", "NivelEstudio")
                        .WithMany("UsuarioInformacions")
                        .HasForeignKey("IdNivelEstudio")
                        .IsRequired()
                        .HasConstraintName("FK_UsuarioInformacion_NivelEstudio");

                    b.HasOne("Sperientia___SGI.Models.dbModels.Pais", "Pai")
                        .WithMany("UsuarioInformacions")
                        .HasForeignKey("IdPais")
                        .IsRequired()
                        .HasConstraintName("FK_UsuarioInformacion_Pais");

                    b.HasOne("Sperientia___SGI.Models.dbModels.Pronombre", "Pronombre")
                        .WithMany("UsuarioInformacions")
                        .HasForeignKey("IdPronombre")
                        .HasConstraintName("FK_UsuarioInformacion_Pronombre");

                    b.HasOne("Sperientia___SGI.Models.dbModels.ApplicationUser", "UsuarioLogin_IdSupervisor")
                        .WithMany("UsuarioInformacions")
                        .HasForeignKey("IdSupervisor")
                        .HasConstraintName("FK_UsuarioInformacion_Supervisor");

                    b.HasOne("Sperientia___SGI.Models.dbModels.TallaPlayera", "TallaPlayera")
                        .WithMany("UsuarioInformacions")
                        .HasForeignKey("IdTallaPlayera")
                        .HasConstraintName("FK_UsuarioInformacion_TallaPlayera");

                    b.HasOne("Sperientia___SGI.Models.dbModels.TipoContrato", "TipoContrato")
                        .WithMany("UsuarioInformacions")
                        .HasForeignKey("IdTipoContrato")
                        .IsRequired()
                        .HasConstraintName("FK_UsuarioInformacion_TipoContrato");

                    b.HasOne("Sperientia___SGI.Models.dbModels.ApplicationUser", "UsuarioLogin_IdUsuarioLogin")
                        .WithOne("UsuarioInformacion")
                        .HasForeignKey("Sperientia___SGI.Models.dbModels.UsuarioInformacion", "IdUsuarioLogin")
                        .IsRequired()
                        .HasConstraintName("FK_UsuarioInformacion_UsuarioLogin");

                    b.HasOne("Sperientia___SGI.Models.dbModels.Divisa", "Divisa")
                        .WithMany("UsuarioInformacions")
                        .HasForeignKey("SueldoDivisa")
                        .IsRequired()
                        .HasConstraintName("FK_UsuarioInformacion_Divisa");

                    b.Navigation("Departamento");

                    b.Navigation("Divisa");

                    b.Navigation("Empresa");

                    b.Navigation("EstadoCivil");

                    b.Navigation("NivelEstudio");

                    b.Navigation("Pai");

                    b.Navigation("Pronombre");

                    b.Navigation("TallaPlayera");

                    b.Navigation("TipoContrato");

                    b.Navigation("UsuarioLogin_IdSupervisor");

                    b.Navigation("UsuarioLogin_IdUsuarioLogin");
                });

            modelBuilder.Entity("Sperientia___SGI.Models.dbModels.ApplicationUser", b =>
                {
                    b.Navigation("Ausencias");

                    b.Navigation("BeneficioUsuarios");

                    b.Navigation("CapacitacionUsuarios");

                    b.Navigation("Direccions");

                    b.Navigation("InventarioAsignacions");

                    b.Navigation("ServicioUsuarios");

                    b.Navigation("SolicitudVacaciones_IdEmpleado");

                    b.Navigation("SolicitudVacaciones_IdUsuarioRh");

                    b.Navigation("UsuarioInformacion")
                        .IsRequired();

                    b.Navigation("UsuarioInformacions");
                });

            modelBuilder.Entity("Sperientia___SGI.Models.dbModels.Beneficio", b =>
                {
                    b.Navigation("BeneficioUsuarios");
                });

            modelBuilder.Entity("Sperientia___SGI.Models.dbModels.CapacitacionTipo", b =>
                {
                    b.Navigation("CapacitacionUsuarios");
                });

            modelBuilder.Entity("Sperientia___SGI.Models.dbModels.Departamento", b =>
                {
                    b.Navigation("UsuarioInformacions");
                });

            modelBuilder.Entity("Sperientia___SGI.Models.dbModels.Divisa", b =>
                {
                    b.Navigation("Servicios");

                    b.Navigation("UsuarioInformacions");
                });

            modelBuilder.Entity("Sperientia___SGI.Models.dbModels.Empresa", b =>
                {
                    b.Navigation("UsuarioInformacions");
                });

            modelBuilder.Entity("Sperientia___SGI.Models.dbModels.EstadoCivil", b =>
                {
                    b.Navigation("UsuarioInformacions");
                });

            modelBuilder.Entity("Sperientia___SGI.Models.dbModels.Inventario", b =>
                {
                    b.Navigation("InventarioAsignacions");

                    b.Navigation("InventarioGeneral")
                        .IsRequired();

                    b.Navigation("InventarioLibro")
                        .IsRequired();
                });

            modelBuilder.Entity("Sperientia___SGI.Models.dbModels.InventarioCategoria", b =>
                {
                    b.Navigation("Inventarios");
                });

            modelBuilder.Entity("Sperientia___SGI.Models.dbModels.NivelEstudio", b =>
                {
                    b.Navigation("UsuarioInformacions");
                });

            modelBuilder.Entity("Sperientia___SGI.Models.dbModels.Pais", b =>
                {
                    b.Navigation("UsuarioInformacions");
                });

            modelBuilder.Entity("Sperientia___SGI.Models.dbModels.Pronombre", b =>
                {
                    b.Navigation("UsuarioInformacions");
                });

            modelBuilder.Entity("Sperientia___SGI.Models.dbModels.Servicio", b =>
                {
                    b.Navigation("ServicioUsuarios");
                });

            modelBuilder.Entity("Sperientia___SGI.Models.dbModels.SolicitudVacaciones", b =>
                {
                    b.Navigation("SolicitudVacacionesDias");
                });

            modelBuilder.Entity("Sperientia___SGI.Models.dbModels.SolicitudVacacionesEstatus", b =>
                {
                    b.Navigation("SolicitudVacaciones");
                });

            modelBuilder.Entity("Sperientia___SGI.Models.dbModels.TallaPlayera", b =>
                {
                    b.Navigation("UsuarioInformacions");
                });

            modelBuilder.Entity("Sperientia___SGI.Models.dbModels.TipoContrato", b =>
                {
                    b.Navigation("UsuarioInformacions");
                });
#pragma warning restore 612, 618
        }
    }
}
